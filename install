#!/bin/bash

# Configurações
VERSION="1.3.0"
DEPENDENCIES=("curl" "wget")
SUPPORTED_DISTROS=("ubuntu" "debian" "raspbian" "centos" "fedora")
LOG_FILE="/var/log/whapichat_install.log"

# Funções
log_message() {
    local message="$1"
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $message" | tee -a "$LOG_FILE"
}

show_help() {
    echo "Uso: $0 [OPÇÃO]"
    echo
    echo "Opções:"
    echo "  --help     Mostra esta mensagem de ajuda"
    echo "  --version  Mostra a versão do instalador"
    echo
    exit 0
}

check_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        if [[ ! " ${SUPPORTED_DISTROS[@]} " =~ " ${ID} " ]]; then
            log_message "ERRO: Distribuição não suportada: $ID"
            log_message "Distribuições suportadas: ${SUPPORTED_DISTROS[*]}"
            exit 1
        fi
    else
        log_message "AVISO: Não foi possível detectar a distribuição Linux"
    fi
}

check_disk_space() {
    local required_space=100 # MB
    local available_space=$(df -m . | awk 'NR==2 {print $4}')
    
    if [ "$available_space" -lt "$required_space" ]; then
        log_message "ERRO: Espaço em disco insuficiente. Necessário: ${required_space}MB, Disponível: ${available_space}MB"
        exit 1
    fi
}

install_package() {
    local package=$1
    if command -v apt-get &> /dev/null; then
        apt-get install -y "$package"
    elif command -v yum &> /dev/null; then
        yum install -y "$package"
    elif command -v dnf &> /dev/null; then
        dnf install -y "$package"
    else
        log_message "ERRO: Gerenciador de pacotes não suportado"
        exit 1
    fi
}

show_banner() {
    echo "========================================"
    echo " Instalador Whapichat v$VERSION"
    echo "========================================"
    echo
}

check_root() {
    if [ "$EUID" -ne 0 ]; then
        echo "ERRO: Por favor, execute como root ou usando sudo."
        exit 1
    fi
}

check_dependencies() {
    for dep in "${DEPENDENCIES[@]}"; do
        if ! command -v $dep &> /dev/null; then
            log_message "Instalando dependência: $dep"
            install_package "$dep" || {
                log_message "ERRO: Falha ao instalar $dep"
                exit 1
            }
        fi
    done
}

handle_error() {
    log_message "ERRO: Ocorreu um erro durante a instalação."
    log_message "Detalhes: $1"
    exit 1
}

# Configuração de tratamento de erros
trap 'handle_error "$LINENO"' ERR

# Verificação de argumentos
if [[ "$1" == "--help" ]]; then
    show_help
elif [[ "$1" == "--version" ]]; then
    echo "Instalador Whapichat v$VERSION"
    exit 0
fi

# Início da instalação
show_banner
check_root
check_distro
check_disk_space

log_message "Iniciando instalação do Whapichat v$VERSION"
log_message "Verificando dependências..."
check_dependencies

log_message "Detectando arquitetura do sistema..."
ARCH=$(uname -m)

if [[ "$ARCH" = "armv7l" || "$ARCH" = "aarch64" ]]; then
    log_message "Sistema ARM detectado. Atualizando pacotes..."
    if command -v apt-get &> /dev/null; then
        apt update && apt upgrade linux-generic -y || handle_error "Falha na atualização do sistema"
    elif command -v yum &> /dev/null; then
        yum update -y || handle_error "Falha na atualização do sistema"
    fi
else
    log_message "Sistema não-ARM detectado. Instalando tofrodos..."
    install_package "tofrodos" || handle_error "Falha na instalação do tofrodos"
    
    log_message "Convertendo formatos de arquivo..."
    fromdos whapichat && fromdos */* || handle_error "Falha na conversão de arquivos"
fi

log_message "Configurando permissões..."
chmod +x whapichat || handle_error "Falha ao configurar permissões"

log_message "Iniciando Whapichat..."
bash whapichat || handle_error "Falha ao iniciar Whapichat"

log_message "Instalação concluída com sucesso!"
